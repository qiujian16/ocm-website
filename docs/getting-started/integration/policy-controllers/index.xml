<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Policy on Open Cluster Management</title><link>https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/</link><description>Recent content in Policy on Open Cluster Management</description><generator>Hugo</generator><language>en</language><atom:link href="https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/index.xml" rel="self" type="application/rss+xml"/><item><title>Policy framework</title><link>https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/policy-framework/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/policy-framework/</guid><description>The policy framework provides governance capabilities to OCM managed Kubernetes clusters. Policies provide visibility and drive remediation for various security and configuration aspects to help IT administrators meet their requirements.
API Concepts View the Policy API page for additional details about the Policy API managed by the Policy Framework components, including:
Policy PolicySet PlacementBinding Architecture The governance policy framework distributes policies to managed clusters and collects results to send back to the hub cluster.</description></item><item><title>Policy API concepts</title><link>https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/policy/</guid><description>Overview The policy framework has the following API concepts:
Policy Templates are the policies that perform a desired check or action on a managed cluster. For example, ConfigurationPolicy objects are embedded in Policy objects under the policy-templates array. A Policy is a grouping mechanism for Policy Templates and is the smallest deployable unit on the hub cluster. Embedded Policy Templates are distributed to applicable managed clusters and acted upon by the appropriate policy controller.</description></item><item><title>Configuration Policy</title><link>https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/configuration-policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/configuration-policy/</guid><description>The ConfigurationPolicy defines Kubernetes manifests to compare with objects that currently exist on the cluster. The Configuration policy controller is provided by Open Cluster Management and runs on managed clusters.
View the Policy API concepts page to learn more about the ConfigurationPolicy API.
Prerequisites You must meet the following prerequisites to install the configuration policy controller:
Ensure kubectl and kustomize are installed.
Ensure Golang is installed, if you are planning to install from the source.</description></item><item><title>Open Policy Agent Gatekeeper</title><link>https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/gatekeeper/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/gatekeeper/</guid><description>Gatekeeper is a validating webhook with auditing capabilities that can enforce custom resource definition-based policies that are run with the Open Policy Agent (OPA). Gatekeeper constraints can be used to evaluate Kubernetes resource compliance. You can leverage OPA as the policy engine, and use Rego as the policy language.
Installing Gatekeeper See the Gatekeeper documentation to install the desired version of Gatekeeper to the managed cluster.
Sample Gatekeeper policy Gatekeeper policies are written using constraint templates and constraints.</description></item></channel></rss>